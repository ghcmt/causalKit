% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarySigBio.R
\name{summarySigBio}
\alias{summarySigBio}
\title{summarySigBio}
\usage{
summarySigBio(
  bio_names,
  dfInt,
  dfMed,
  ind_cov,
  covariates,
  excel,
  tableCaption,
  resultsFolder = "results"
)
}
\arguments{
\item{bio_names}{Vector with the names of the biomarkers to test.}

\item{dfInt}{Dataframe that contains the values of the interaction linear models
(without covariates).}

\item{dfMed}{Dataframe that contains the values of the mediation linear models
(with each covariate).}

\item{ind_cov}{Individual covariates for which we want to test the interaction
with the biomarkers. They will be included as fixed effects in all models.}

\item{covariates}{Vector with the covariates that we included in the models.}

\item{excel}{Name of the Excel file to store the results (e.g.,
"biomarkers_mediation_results.xlsx")}

\item{tableCaption}{Name of the table that returns the function (e.g., "Change
in Estimate value (%) after introducing covariates in the model for all
biomarkers").}

\item{resultsFolder}{Name of the directory in which the results will be stored
("results" by default).}
}
\value{
A Kable table with the parameters of the model with and without
each covariates for the selected biomarkers.
}
\description{
This function creates a table with the parameters of the model with and without
each covariate for selected biomarkers. The function requires the following
input parameters: "bio_names" (a vector with the names of the biomarkers to test),
"dfInt" (a dataframe that contains the values of the interaction linear models
(without covariates)), "dfMed" (a dataframe that contains the values of the
mediation linear models (with each covariate)), "ind_cov" (individual covariates
for which the interaction with the biomarkers is tested, and which will be
included as fixed effects in all models), "covariates" (a vector with the covariates
that are included in the models), "excel" (the name of the Excel file to store the
results), and tableCaption (the name of the table that returns the function).
The function iterates through the biomarkers and creates a subset of the interaction
dataframe with the target biomarkers. It then creates another dataframe from the
mediation dataframe with the interaction, and another from the mediation dataframe
with the information about covariates alone. Both dataframes are merged by the
target variables, and the level information is obtained for categorical variables.
The function then appends the information to the dataframe.
Next, the function calculates the change in percentage from the interaction estimate
without the covariate, and constructs the table, highlighting the rows with
an absolute change (comparing the estimate from the mediation dataframe
to the original estimate of the interaction dataframe without the covariate)
higher than 10% in red. The rows are grouped depending on the biomarker.
In addition, the function writes the results to an Excel file. Finally,
it returns a Kable table with the relevant information about the changes
in estimates.
}
